name: K8s Test

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Run tests on environment:'
        required: true
        type: choice
        options:
          - ci
          - development
          - staging
          - production


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Start
        run: echo "Running tests on ${{ github.event.inputs.environment }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.3'
        id: install

      - name: Update kube config
        run: aws eks update-kubeconfig --name ci-eks-cluster   

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/zookeeper-deployment.yaml
          kubectl apply -f k8s/zookeeper-service.yaml
          kubectl apply -f k8s/kafka-deployment.yaml
          kubectl apply -f k8s/kafka-service.yaml
          kubectl apply -f k8s/redis-deployment.yaml
          kubectl apply -f k8s/redis-service.yaml
          kubectl apply -f k8s/redis-monitor-deployment.yaml
          kubectl apply -f k8s/kafka-monitor-deployment.yaml
          kubectl apply -f k8s/crawler-deployment.yaml
          kubectl apply -f k8s/rest-deployment.yaml
          kubectl apply -f k8s/rest-service.yaml
          kubectl apply -f dev/datadoggie-deployment.yaml
          kubectl apply -f dev/datadoggie-service.yaml

      - name: Run test
        run: |
          kubectl exec service/redis-monitor bash -c "/app/src/run_docker_tests.sh"

